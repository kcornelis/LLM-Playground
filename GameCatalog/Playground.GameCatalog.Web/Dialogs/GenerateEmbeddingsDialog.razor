@inject CatalogClient CatalogClient

<MudDialog>
    <DialogContent>
        <MudText Class="mt-2">
        @(IsCompleted ? ToMarkup("Generation completed successfully! Click ok to close the dialog.") :
          isRunning ? ToMarkup("Generation in progress... Please wait.") : 
          ToMarkup("Generates embeddings for the catalog â€” costs a few OpenAI credits. <br />Click ok if you dare (and have credits)."))
        </MudText>
        <MudProgressLinear Class="@(isRunning || IsCompleted ? "mt-4 visible" : "mt-4 invisible")" Color="Color.Primary" Value="@ProgressPercent" />
        <MudText Class="@(isRunning || IsCompleted ? "mt-2 visible" : "mt-2 invisible")">Processed @processed / @total</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" Disabled="@(isRunning || IsCompleted)" OnClick="CloseDialog">Cancel</MudButton>
        <MudButton Color="Color.Primary" Disabled="@isRunning" OnClick="StartOrCloseDialog">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance Dialog { get; set; } = default!;

    private bool isRunning;
    private bool IsCompleted => !isRunning && total > 0;

    private int processed { get; set; }
    private int total { get; set; }
    private double ProgressPercent => total > 0 ? (double)processed / total * 100 : 0;

    private async Task StartOrCloseDialog()
    {
        if (processed > 0)
        {
            Dialog.Close(DialogResult.Ok(true));
            return;
        }

        isRunning = true;
        try
        {
            await foreach (var update in CatalogClient.GenerateEmbeddingsStream())
            {
                total = update.Total;
                processed = update.Processed;
                StateHasChanged();
            }
        }
        catch
        {
            // Optionally show an error; for now we just close with cancel result
            Dialog.Cancel();
        }
        finally
        {
            isRunning = false;
        }
    }

    private void CloseDialog()
    {
        Dialog.Cancel();
    }
}
